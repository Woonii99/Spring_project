<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sist.web.dao.UserDao">
	<resultMap type="com.sist.web.model.User" id="userResultMap">
		<id column="USER_ID" property="userId" />					
		<result column="USER_PWD" property="userPwd" />
		<result column="USER_NAME" property="userName" />
		<result column="USER_EMAIL" property="userEmail" />
		<result column="STATUS" property="status" />
		<result column="REG_DATE" property="regDate" />
		<result column="ADDR_CODE" property="addrCode" />
		<result column="ADDR_BASE" property="addrBase" />
		<result column="ADDR_DETAIL" property="addrDetail" />
		<result column="RATING" property="rating" />
		<result column="FAKE_PWD_STATUS" property="fakePwdStatus" />
	</resultMap>
	
	<select id="userSelect" parameterType="String" resultMap="userResultMap">
		  SELECT  	USER_ID,
		            NVL(USER_PWD, '') USER_PWD,
		            NVL(USER_NAME, '') USER_NAME,
		            NVL(USER_EMAIL, '') USER_EMAIL,
		            NVL(STATUS, '') STATUS,
		            NVL(TO_CHAR(REG_DATE, 'YYYY.MM.DD HH24:MI:SS'), '') REG_DATE,
		            NVL(ADDR_CODE, '') ADDR_CODE,
		            NVL(ADDR_BASE, '') ADDR_BASE,
		            NVL(ADDR_DETAIL, '') ADDR_DETAIL,
		            NVL(RATING, '') RATING,
		            NVL(FAKE_PWD_STATUS, '') FAKE_PWD_STATUS
		  FROM  	SPR_USER
		 WHERE 	USER_ID = #{value}
	</select>
	
	<select id="emailSelect" parameterType="String" resultMap="userResultMap">
		  SELECT  	NVL(USER_ID, '') USER_ID,
		            NVL(USER_PWD, '') USER_PWD,
		            NVL(USER_NAME, '') USER_NAME,
		            USER_EMAIL,
		            NVL(STATUS, '') STATUS,
		            NVL(TO_CHAR(REG_DATE, 'YYYY.MM.DD HH24:MI:SS'), '') REG_DATE,
		            NVL(ADDR_CODE, '') ADDR_CODE,
		            NVL(ADDR_BASE, '') ADDR_BASE,
		            NVL(ADDR_DETAIL, '') ADDR_DETAIL,
		            NVL(RATING, '') RATING
		  FROM  	SPR_USER
		 WHERE 	USER_EMAIL = #{value}
	</select>
	
	<insert id="userInsert" parameterType="com.sist.web.model.User">
		INSERT INTO SPR_USER 
		(
		    USER_ID,
		    USER_PWD,
		    USER_NAME,
		    USER_EMAIL,
		    STATUS,
		    REG_DATE,
		    ADDR_CODE,
		    ADDR_BASE,
		    ADDR_DETAIL,
		    RATING
		) VALUES (
		    #{userId},
			#{userPwd},
			#{userName},
			#{userEmail},
			#{status},
			SYSDATE,
			#{addrCode},
			#{addrBase},
			#{addrDetail},
			#{rating}
		)
	</insert>
	
	<update id="userUpdate" parameterType="com.sist.web.model.User">
		UPDATE SPR_USER
	       SET USER_PWD = #{userPwd},
	           USER_NAME = #{userName},
	           USER_EMAIL = #{userEmail},
	           ADDR_CODE = #{addrCode},
	           ADDR_BASE = #{addrBase},
	           ADDR_DETAIL = #{addrDetail},
	           RATING = #{rating}
	    WHERE USER_ID = #{userId}
	</update>

	<select id="findUserId" parameterType="com.sist.web.model.User" resultType="string">
		SELECT NVL(USER_ID, '') USER_ID
		  FROM SPR_USER
		 WHERE USER_NAME = #{userName}
		   AND USER_EMAIL = #{userEmail}
	</select>
	
	<select id="findUserPwd" parameterType="com.sist.web.model.User" resultType="string">
		SELECT NVL(USER_PWD, '') USER_PWD
		  FROM SPR_USER
		 WHERE USER_ID = #{userId}
		   AND USER_EMAIL = #{userEmail}
	</select>
	
	<update id="updatePwd" parameterType="com.sist.web.model.User">
		UPDATE SPR_USER
		   SET USER_PWD = #{userPwd},
		   	   FAKE_PWD_STATUS = #{fakePwdStatus}
		 WHERE USER_ID = #{userId}
		   AND USER_EMAIL = #{userEmail}
	</update>
	
	<update id="updateUser" parameterType="com.sist.web.model.User">
		UPDATE SPR_USER
		   SET STATUS = #{status}
		 WHERE USER_ID = #{userId}
	</update>
	
	<update id="updateFakeStatus" parameterType="com.sist.web.model.User">
		UPDATE SPR_USER
		   SET FAKE_PWD_STATUS = #{fakePwdStatus}
		 WHERE USER_ID = #{userId}
	</update>
</mapper>
